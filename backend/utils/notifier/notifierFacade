const Notifiable = require('./notifiable');
const { InAppNotifier } = require('./inAppNotifier');
const { EmailNotifier } = require('./emailNotifier');
const { SMSNotifier } = require('./SMSNotifier');
const config = require('../../config/config');

class NotifierFacade {
  channels = {};
  channelMap = {
    email: {
      enabled: config.ENABLE_EMAIL_NOTIFIER,
      notifier: EmailNotifier
    },
    sms: {
      enabled: config.ENABLE_SMS_NOTIFIER, 
      notifier: SMSNotifier
    },
    inApp: {
      enabled: config.ENABLE_IN_APP_NOTIFICATION,
      notifier: InAppNotifier
    }
  };

  constructor() {
    Object.entries(this.channelMap).forEach(([channel, config]) => {
      if (config.enabled) {
        this.channels[channel] = new config.notifier();
      }
    });
  }

  /**
   * Send a message through one or more channels (default: email)
   * @param {{to:string, subject:string, body:string, channels?:string[]}} opts
   */
  notify({ from, to, body, options = {} }) {
    Object.keys(this.channels).forEach((ch) => {
      const notifier = this.channels[ch];
      if (!notifier) {
        console.warn(`Unknown channel: ${ch}`);
        return;
      }
      notifier.deliver({ from, to, body, options });
    });
  }
}

module.exports = NotifierFacade;